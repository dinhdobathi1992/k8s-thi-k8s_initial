# Default values for nginx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
name: nginx
labels: backend
replicaCount: 5
image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.21.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
volumes:
  name: code
persistentVolumeClaim: 
  enabled: true
  name: code
configMap:
  enable: true
  key: config 
  path: site.conf
  fastcgi_pass: php:9000 # service php 
service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  entryPoints:
    - websecure
  # rule match hosts: Host(`example.org`)
  # rule math hosts with path: Host(`example.org`) && Path(`/traefik`)
  match: Host(`nginxweb.ddns.net`)
  tls: 
    secretName: tls-cert.traefik.svc.cluster.local
  #    hosts:
  #      - chart-example.local
middlewares:
  name: nginxweb-https-only



resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
