---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
  namespace: traefik
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`traefik.ddns.net`) # Hostname to match
      kind: Rule
      services: # Service to redirect requests to
        - name: api@internal # Special service created by Traefik pod
          kind: TraefikService
      middlewares:
        - name: traefik-secured
  tls:
    secretName: tls-cert.linhnh.svc.cluster.local
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-secured
  namespace: traefik
spec:
  chain:
    middlewares:
    - name: traefik-auth
    - name: https-only
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-auth
  namespace: traefik
spec:
  basicAuth:
    secret: traefik-secret
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-only
  namespace: traefik
spec:
  redirectScheme:
    scheme: https
---
# Note: in a kubernetes secret the string (e.g. generated by htpasswd) must be base64-encoded first.
# To create an encoded user:password pair, the following command can be used:
# htpasswd -nb user password | openssl base64
apiVersion: v1
kind: Secret
metadata:
  name: traefik-secret
  namespace: traefik
type: Opaque
data:
  users: |2
    YWRtaW46JGFwcjEkRjJubHE3Qm4kNWY0Ukt0N21Zcmc5eUlLRnBwQUJ1MAoK

