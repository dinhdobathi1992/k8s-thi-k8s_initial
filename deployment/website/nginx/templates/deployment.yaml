---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    tier: {{ .Values.labels }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      tier: {{ .Values.labels }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        tier: {{ .Values.labels }}
    spec:
      volumes:
      - name: {{ .Values.volumes.name }}
        emptyDir: {}
      initContainers:
      - name: {{ .Values.initContainers.name }}
        image: {{ .Values.initContainers.image }}
        volumeMounts:
        - name: {{ .Values.volumes.name }}
          mountPath: "/{{ .Values.volumes.name }}"
        command: ["/bin/sh", "-c", 'echo {{ .Values.initContainers.image | quote }} > /{{ .Values.volumes.name }}/index.html']
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.volumes.name }}
              mountPath: "/usr/share/nginx/html"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}